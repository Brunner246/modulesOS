name: C++ CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            compiler: gcc
            cc: gcc-13.3
            cxx: g++-13.3
          - os: ubuntu-latest
            compiler: clang
            cc: clang-18.1.0
            cxx: clang++-18.1.0
          - os: windows-latest
            compiler: msvc
            cc: cl
            cxx: cl

    steps:
      - uses: actions/checkout@v2

      - name: Setup GCC
        if: matrix.os == 'ubuntu-latest' && matrix.compiler == 'gcc'
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt-get update
          sudo apt-get install gcc-13 g++-13
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 100

      - name: Setup Clang on Ubuntu
        if: matrix.os == 'ubuntu-latest' && matrix.compiler == 'clang'
        run: |
          sudo apt-get update
          sudo apt-get install clang-11

      - name: Setup MSVC
        if: matrix.os == 'windows-latest' && matrix.compiler == 'msvc'
        run: |
          choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --includeRecommended --includeOptional"

      - name: Setup Clang on MacOS
        if: matrix.os == 'macos-latest' && matrix.compiler == 'clang'
        run: |
          brew install llvm

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_CXX_COMPILER=${{ matrix.cxx }}
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}

      - name: Build
        run: cmake --build build