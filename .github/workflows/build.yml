name: C++ CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        compiler: [ gcc, clang, msvc ]
        include:
          - os: ubuntu-latest
            compiler: gcc
            cc: gcc-11
            cxx: g++-11
          - os: ubuntu-latest
            compiler: clang
            cc: clang-17
            cxx: clang++-17
          - os: windows-latest
            compiler: msvc
            cc: cl
            cxx: cl
          - os: macos-latest
            compiler: clang
            cc: clang-17
            cxx: clang++-17

    steps:
      - uses: actions/checkout@v2

      - name: Setup Clang 17 on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-17
          echo "CC=$(which clang-17)" >> $GITHUB_ENV
          echo "CXX=$(which clang++-17)" >> $GITHUB_ENV

      - name: Install Ninja on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install ninja-build

      - name: Install Ninja on macOS
        if: matrix.os == 'macos-latest'
        run: |
          brew install ninja

      - name: Install Ninja on Windows
        if: matrix.os == 'windows-latest'
        run: |
          choco install ninja

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} -G Ninja
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}

      - name: Build
        run: cmake --build build